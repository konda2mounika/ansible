

- name: Installing Maven 
  ansible.builtin.package:
    name: maven  
    state: present 

- name: Creating application user
  ansible.builtin.include_role:
    name: common 
    tasks_from: create-user

- name:  Download and extract {{COMPONENT}}
  ansible.builtin.include_role:
    name: common 
    tasks_from: download-and-extract 

# *** Uncomment this if you don't have Nexus ***
# - name: Generating Package 
#   ansible.builtin.shell: mvn clean package &&  mv target/shipping-1.0.jar shipping.jar 
#   become_user: "{{APPUSER}}"
#   args:
#     chdir: /home/{{APPUSER}}/{{COMPONENT}}/

- name: Configuing the {{COMPONENT}} svc
  ansible.builtin.include_role:
    name: common 
    tasks_from: systemd-start-svc

- name: Configuing rsyslog
  ansible.builtin.include_role:
    name: elk  
    tasks_from: rsyslog

- name: Installing Filebeat
  ansible.builtin.include_role:
    name: elk 
    tasks_from: filebeat

- name: Installing Node Exporterr
  ansible.builtin.include_role:
    name: prometheus  
    tasks_from: node_exporter

- name: Configuing system name 
  ansible.builtin.include_role:
    name: common 
    tasks_from: set-hostname

# # 8-Shipping

# Shipping service is responsible for finding the distance of the package to be shipped and calculating the price based on that.

# Shipping service is written in Java, Hence we need to install Java.

# 1. Install Maven, This will install Java too.

# ```sql
# # yum install maven -y
# ```

# 1. As per the standard process, we always run the applications as a normal user.

# Create a user

# ```sql
# # useradd roboshop
# ```

# 1. Download the repo

# ```bash
# $ cd /home/roboshop
# $ curl -s -L -o /tmp/shipping.zip "https://github.com/stans-robot-project/shipping/archive/main.zip"
# $ unzip /tmp/shipping.zip
# $ mv shipping-main shipping
# $ cd shipping
# $ mvn clean package 
# $ mv target/shipping-1.0.jar shipping.jar
# ```

# 1. Update SystemD Service file ( `SHIPPING` talks to both `CART` & `MySQL` )
    
#     Update `CARTENDPOINT` with Cart Server IP.
    
#     Update `DBHOST` with MySQL Server IP
    

# ```sql
# $ vim systemd.service 
# ```

# 1. Copy the service file and start the service. 

# ```sql
# # mv /home/roboshop/shipping/systemd.service /etc/systemd/system/shipping.service
# # systemctl daemon-reload
# # systemctl start shipping 
# # systemctl enable shipping
# # systemctl status shipping -l 
# ( You should see a message stating, that shipping started )

# **Ref:** Started ShippingServiceApplication in `X` seconds
# ```

# - Now we are good with SHIPPING.
# - Ensure you update the `SHIPPING` IP Address / DNS Name in the Nginx Reverse Proxy File